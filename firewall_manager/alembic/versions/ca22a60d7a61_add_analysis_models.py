"""Add analysis models

Revision ID: ca22a60d7a61
Revises: 05af03b5b5a7
Create Date: 2025-10-30 07:28:40.102497

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ca22a60d7a61'
down_revision: Union[str, Sequence[str], None] = '05af03b5b5a7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'SUCCESS', 'FAILURE', name='taskstatus'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_tasks_id'), 'analysis_tasks', ['id'], unique=False)
    op.create_table('redundancy_policy_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('set_number', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('vsys', sa.String(), nullable=True),
    sa.Column('seq', sa.Integer(), nullable=True),
    sa.Column('rule_name', sa.String(), nullable=False),
    sa.Column('enable', sa.String(), nullable=True),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('user', sa.String(), nullable=True),
    sa.Column('destination', sa.String(), nullable=False),
    sa.Column('service', sa.String(), nullable=False),
    sa.Column('application', sa.String(), nullable=True),
    sa.Column('security_profile', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['analysis_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_redundancy_policy_sets_id'), 'redundancy_policy_sets', ['id'], unique=False)
    op.create_index(op.f('ix_redundancy_policy_sets_rule_name'), 'redundancy_policy_sets', ['rule_name'], unique=False)
    op.create_index(op.f('ix_redundancy_policy_sets_set_number'), 'redundancy_policy_sets', ['set_number'], unique=False)
    with op.batch_alter_table('change_logs', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
                   existing_type=sa.DATETIME(),
                   nullable=False)
        batch_op.alter_column('device_id',
                   existing_type=sa.INTEGER(),
                   nullable=False)
        batch_op.alter_column('data_type',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('object_name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('action',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('details',
                   existing_type=sa.TEXT(),
                   type_=sa.JSON(),
                   existing_nullable=True)

    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.alter_column('name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('ip_address',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('vendor',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('username',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('password',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.create_unique_constraint('uq_devices_ip_address', ['ip_address'])

    with op.batch_alter_table('network_groups', schema=None) as batch_op:
        batch_op.alter_column('name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('members',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)
        batch_op.alter_column('description',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)

    with op.batch_alter_table('network_objects', schema=None) as batch_op:
        batch_op.alter_column('name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('ip_address',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('description',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)

    with op.batch_alter_table('policies', schema=None) as batch_op:
        batch_op.alter_column('rule_name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('action',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('source',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   nullable=False)
        batch_op.alter_column('destination',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   nullable=False)
        batch_op.alter_column('service',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('description',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)
        batch_op.drop_index(op.f('ix_policies_search'))

    with op.batch_alter_table('policy_address_members', schema=None) as batch_op:
        batch_op.create_index(op.f('ix_policy_address_members_id'), ['id'], unique=False)

    with op.batch_alter_table('policy_service_members', schema=None) as batch_op:
        batch_op.create_index(op.f('ix_policy_service_members_id'), ['id'], unique=False)

    with op.batch_alter_table('service_groups', schema=None) as batch_op:
        batch_op.alter_column('name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('members',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)
        batch_op.alter_column('description',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)

    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.alter_column('name',
                   existing_type=sa.VARCHAR(),
                   nullable=False)
        batch_op.alter_column('description',
                   existing_type=sa.TEXT(),
                   type_=sa.String(),
                   existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('services', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('services', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('service_groups', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('service_groups', 'members',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('service_groups', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_policy_service_members_id'), table_name='policy_service_members')
    op.drop_index(op.f('ix_policy_address_members_id'), table_name='policy_address_members')
    op.create_index(op.f('ix_policies_search'), 'policies', ['source', 'destination', 'service'], unique=False)
    op.alter_column('policies', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('policies', 'service',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('policies', 'destination',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('policies', 'source',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('policies', 'action',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('policies', 'rule_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('network_objects', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('network_objects', 'ip_address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('network_objects', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('network_groups', 'description',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('network_groups', 'members',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('network_groups', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_constraint(None, 'devices', type_='unique')
    op.alter_column('devices', 'password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'username',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'vendor',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'ip_address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('devices', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('change_logs', 'details',
               existing_type=sa.JSON(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('change_logs', 'action',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('change_logs', 'object_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('change_logs', 'data_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('change_logs', 'device_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('change_logs', 'timestamp',
               existing_type=sa.DATETIME(),
               nullable=True)
    op.drop_index(op.f('ix_redundancy_policy_sets_set_number'), table_name='redundancy_policy_sets')
    op.drop_index(op.f('ix_redundancy_policy_sets_rule_name'), table_name='redundancy_policy_sets')
    op.drop_index(op.f('ix_redundancy_policy_sets_id'), table_name='redundancy_policy_sets')
    op.drop_table('redundancy_policy_sets')
    op.drop_index(op.f('ix_analysis_tasks_id'), table_name='analysis_tasks')
    op.drop_table('analysis_tasks')
    # ### end Alembic commands ###
